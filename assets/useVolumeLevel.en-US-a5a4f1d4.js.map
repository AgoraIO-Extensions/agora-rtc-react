{"version":3,"file":"useVolumeLevel.en-US-a5a4f1d4.js","sources":["../../docs/hooks/useVolumeLevel.en-US.mdx?raw","../../src/stories/hooks/useVolumeLevel.en-US.mdx"],"sourcesContent":["export default \"## useVolumeLevel\\n\\nReturns the volume level of an audio track at a frequency of once per second.\\n\\n#### Parameters\\n\\n| Parameter    | Type                                                                             | Required | Description                                                                                                                                                                                                                                  |\\n| ------------ | -------------------------------------------------------------------------------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `audioTrack` | `IRemoteAudioTrack` &VerticalLine; `ILocalAudioTrack` &VerticalLine; `undefined` | No       | The local or remote audio track. The local audio track can be created by calling [`useLocalMicrophoneTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/functions/useLocalMicrophoneTrack.html). If undefined, the volume level is 0. |\\n\\n#### Returns\\n\\n| Type     | Description                                                                                                                                 |\\n| -------- | ------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `number` | The volume level. The value range is [0,1]. 1 is the highest volume level. Usually a user with a volume level above 0.6 is a speaking user. |\\n\\n#### Sample code\\n\\n```jsx\\nimport { useVolumeLevel, useLocalMicrophoneTrack } from \\\"agora-rtc-react\\\";\\n\\nfunction App() {\\n  const audioTrack = useLocalMicrophoneTrack();\\n  const volumeLevel = useVolumeLevel(audioTrack);\\n\\n  return <div>{volumeLevel}</div>;\\n}\\n```\\n\"","import Readme from \"../../../docs/hooks/useVolumeLevel.en-US.mdx?raw\";\r\rimport { Meta, Markdown } from \"@storybook/blocks\";\r\r<Meta title=\"hooks/useVolumeLevel\" />\r\r<Markdown options={{ namedCodesToUnicode: { VerticalLine: \"|\" } }}>{Readme}</Markdown>\r"],"names":["Readme","_createMdxContent","props","_jsxs","_Fragment","_jsx","Meta","Markdown","MDXContent","MDXLayout","_provideComponents"],"mappings":"sXAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKf,SAASC,EAAkBC,EAAO,CAChC,OAAOC,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,sBACb,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAU,CACvB,QAAS,CACP,oBAAqB,CACnB,aAAc,GACf,CACF,EACD,SAAUP,CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASQ,EAAWN,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASO,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEC,EAAoB,EAAER,EAAM,UAAU,EACrF,OAAOO,EAAYJ,EAAAA,IAAKI,EAAW,OAAO,OAAO,CAAE,EAAEP,EAAO,CAC1D,SAAUG,EAAAA,IAAKJ,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAuB,CAC/B"}