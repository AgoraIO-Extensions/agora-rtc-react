{"version":3,"file":"LocalVideoTrack-8cb5f6c3.js","sources":["../../../../node_modules/.pnpm/github.com+AgoraIO-Extensions+agora-rtc-sdk-ng-fake@ab8f42f2b5c11d530b680c4da70f24eeead999ab_r6ht3aloxlrfifx55ryohfdwfm/node_modules/@agoraio-extensions/agora-rtc-sdk-ng-fake/src/tracks/local-video-track.ts","../../src/components/LocalVideoTrack.tsx"],"sourcesContent":["import type { ILocalVideoTrack, VideoPlayerConfig } from \"agora-rtc-sdk-ng\";\n\nimport ipadMp4 from \"../../assets/ipad-2988.mp4\";\nimport { hideProperties } from \"../utils\";\n\nimport type { FakeLocalTrackProps } from \"./local-track\";\nimport { FakeLocalTrack } from \"./local-track\";\n\nexport interface FakeLocalVideoTrackProps extends Omit<FakeLocalTrackProps, \"trackMediaType\"> {\n  videoURI?: string;\n}\n\nexport class FakeLocalVideoTrack extends FakeLocalTrack {\n  public static override create(props?: FakeLocalVideoTrackProps): ILocalVideoTrack {\n    return new FakeLocalVideoTrack(props) as unknown as ILocalVideoTrack;\n  }\n\n  private readonly _videoURI: string;\n\n  protected constructor({ videoURI = ipadMp4, ...props }: FakeLocalVideoTrackProps = {}) {\n    super({ ...props, trackMediaType: \"video\" });\n\n    this._videoURI = videoURI;\n\n    hideProperties(this, \"_config\", \"_videoEl\", \"_videoURI\");\n  }\n  /**\n   * Plays a local video track on the web page.\n   *\n   * @param element Specifies a DOM element. The SDK will create a `<video>` element under the specified DOM element to play the video track. You can specify a DOM element in either of the following ways:\n   * - `string`: Specify the ID of the DOM element.\n   * - `HTMLElement`: Pass a DOM object.\n   * @param config Sets the playback configurations, such as display mode and mirror mode. See [[VideoPlayerConfig]]. By default, the SDK enables mirror mode for a local video track.\n   */\n  public override play(element: string | HTMLElement, config?: VideoPlayerConfig): void {\n    this._config = config;\n\n    const container = typeof element === \"string\" ? document.getElementById(element) : element;\n\n    if (!this._videoEl) {\n      this._videoEl = document.createElement(\"video\");\n      this._videoEl.style.width = \"100%\";\n      this._videoEl.style.height = \"100%\";\n      this._videoEl.loop = true;\n      this._videoEl.muted = true;\n    }\n\n    this._videoEl.src = this._videoURI;\n    this._videoEl.style.objectFit = this._config?.fit || \"cover\";\n    this._videoEl.style.opacity = \"1\";\n\n    if (container) {\n      while (container.firstChild) {\n        container.removeChild(container.firstChild);\n      }\n      container.appendChild(this._videoEl);\n    }\n\n    if (this.enabled && this._videoEl) {\n      this.isPlaying = true;\n      this._videoEl.play().catch(console.log);\n    }\n  }\n  /**\n   * Stops playing the media track.\n   */\n  public override stop(): void {\n    if (this.isPlaying && this._videoEl) {\n      this.isPlaying = false;\n      this._videoEl.style.opacity = \"0\";\n      this._videoEl.pause();\n    }\n  }\n\n  public setEncoderConfiguration(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  protected _config?: VideoPlayerConfig;\n  protected _videoEl?: HTMLVideoElement;\n}\n","import type { ILocalVideoTrack } from \"agora-rtc-sdk-ng\";\nimport type { HTMLProps } from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { VideoTrackStyle, useMergedStyle } from \"../assets/styles\";\nimport { useAwaited } from \"../hooks/tools\";\nimport type { MaybePromiseOrNull } from \"../misc/utils\";\n\nimport { useAutoPlayVideoTrack } from \"./TrackBoundary\";\n\nexport interface LocalVideoTrackProps extends HTMLProps<HTMLDivElement> {\n  /**\n   * The local video track to be played. Call [`IAgoraRTC.createScreenVideoTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/functions/useLocalCameraTrack.html\">`useLocalCameraTrack`</a> or the Web SDK's <a href=\"https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iagorartc.html#createscreenvideotrack) method to create a local video track.\n   */\n  readonly track?: MaybePromiseOrNull<ILocalVideoTrack>;\n\n  /**\n   * `true`: Play the track.`false`: Stop playing the track.\n   */\n  readonly play?: boolean;\n\n  /**\n   * `true`: Disable the track. When disabled, the SDK will stop playing and publishing the track.`false`: Enable the track.\n   */\n  readonly disabled?: boolean;\n\n  /**\n   * `true`: Pause sending media data of the track.`false`: Resume sending media data of the track.\n   */\n  readonly muted?: boolean;\n}\n\n/**\n * This component plays the local video track using the playback device selected by the user in the browser.\n * @example\n * ```jsx\n * import { LocalVideoTrack, useLocalCameraTrack } from \"agora-rtc-react\";\n *\n * function App() {\n *   const videoTrack = useLocalCameraTrack();\n *   return <LocalVideoTrack track={videoTrack} play />;\n * }\n * ```\n */\nexport function LocalVideoTrack({\n  track: maybeTrack,\n  play,\n  disabled,\n  muted,\n  style,\n  ...props\n}: LocalVideoTrackProps) {\n  const mergedStyle = useMergedStyle(VideoTrackStyle, style);\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  const track = useAwaited(maybeTrack);\n\n  useAutoPlayVideoTrack(track, play, div);\n\n  useEffect(() => {\n    if (track && disabled != null) {\n      track.setEnabled(!disabled).catch(console.warn);\n    }\n  }, [disabled, track]);\n\n  useEffect(() => {\n    if (track && muted != null) {\n      track.setMuted(muted).catch(console.warn);\n    }\n  }, [muted, track]);\n\n  return <div {...props} ref={setDiv} style={mergedStyle} />;\n}\n"],"names":["FakeLocalVideoTrack","FakeLocalTrack","videoURI","ipadMp4","props","hideProperties","element","config","container","_a","LocalVideoTrack","maybeTrack","play","disabled","muted","style","mergedStyle","useMergedStyle","VideoTrackStyle","div","setDiv","useState","track","useAwaited","useAutoPlayVideoTrack","useEffect"],"mappings":"oPAYO,MAAMA,UAA4BC,CAAe,CAO5C,YAAY,CAAE,SAAAC,EAAWC,EAAS,GAAGC,CAAM,EAA8B,CAAA,EAAI,CACrF,MAAM,CAAE,GAAGA,EAAO,eAAgB,OAAS,CAAA,EAE3C,KAAK,UAAYF,EAEFG,EAAA,KAAM,UAAW,WAAY,WAAW,CACzD,CAZA,OAAuB,OAAOD,EAAoD,CACzE,OAAA,IAAIJ,EAAoBI,CAAK,CACtC,CAmBgB,KAAKE,EAA+BC,EAAkC,OACpF,KAAK,QAAUA,EAEf,MAAMC,EAAY,OAAOF,GAAY,SAAW,SAAS,eAAeA,CAAO,EAAIA,EAcnF,GAZK,KAAK,WACH,KAAA,SAAW,SAAS,cAAc,OAAO,EACzC,KAAA,SAAS,MAAM,MAAQ,OACvB,KAAA,SAAS,MAAM,OAAS,OAC7B,KAAK,SAAS,KAAO,GACrB,KAAK,SAAS,MAAQ,IAGnB,KAAA,SAAS,IAAM,KAAK,UACzB,KAAK,SAAS,MAAM,YAAYG,EAAA,KAAK,UAAL,YAAAA,EAAc,MAAO,QAChD,KAAA,SAAS,MAAM,QAAU,IAE1BD,EAAW,CACb,KAAOA,EAAU,YACLA,EAAA,YAAYA,EAAU,UAAU,EAElCA,EAAA,YAAY,KAAK,QAAQ,CACrC,CAEI,KAAK,SAAW,KAAK,WACvB,KAAK,UAAY,GACjB,KAAK,SAAS,KAAA,EAAO,MAAM,QAAQ,GAAG,EAE1C,CAIgB,MAAa,CACvB,KAAK,WAAa,KAAK,WACzB,KAAK,UAAY,GACZ,KAAA,SAAS,MAAM,QAAU,IAC9B,KAAK,SAAS,QAElB,CAEO,yBAAyC,CAC9C,OAAO,QAAQ,SACjB,CAIF,CCpCA,SAAAE,EAAA,CACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,MAAAC,EACA,MAAAC,EACA,GAAAX,CACA,EAAA,CACA,MAAAY,EAAAC,EAAAC,EAAAH,CAAA,EACA,CAAAI,EAAAC,CAAA,EAAAC,WAAA,IAAA,EAEAC,EAAAC,EAAAZ,CAAA,EAEA,OAAAa,EAAAF,EAAAV,EAAAO,CAAA,EAEAM,EAAAA,UAAA,IAAA,CACAH,GAAAT,GAAA,MACAS,EAAA,WAAA,CAAAT,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAS,CAAA,CAAA,EAEAG,EAAAA,UAAA,IAAA,CACAH,GAAAR,GAAA,MACAQ,EAAA,SAAAR,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAQ,CAAA,CAAA,QAEA,MAAA,CAAA,GAAAlB,EAAA,IAAAgB,EAAA,MAAAJ,CAAA,CAAA,CACA;;;;;;;;;","x_google_ignoreList":[0]}