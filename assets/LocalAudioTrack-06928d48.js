import{j as d,F as l}from"./jsx-runtime-670450c2.js";import{r as s}from"./index-f1f749bf.js";import{u as c,c as u}from"./TrackBoundary-a2d0821a.js";function m({track:r,play:i=!1,volume:a,disabled:t,muted:n,children:o}){const e=c(r);return u(e,i),s.useEffect(()=>{e&&a!=null&&e.setVolume(a)},[e,a]),s.useEffect(()=>{e&&t!=null&&e.setEnabled(!t).catch(console.warn)},[t,e]),s.useEffect(()=>{e&&n!=null&&e.setMuted(n).catch(console.warn)},[n,e]),o?d(l,{children:o}):null}m.__docgenInfo={description:"A component which plays a local audio track.",methods:[],displayName:"LocalAudioTrack",props:{play:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Whether to play the track."},track:{required:!1,tsType:{name:"union",raw:"T | PromiseLike<T>",elements:[{name:"union",raw:"T | null | undefined",elements:[{name:"T"},{name:"null"},{name:"undefined"}]},{name:"PromiseLike",elements:[{name:"union",raw:"T | null | undefined",elements:[{name:"T"},{name:"null"},{name:"undefined"}]}],raw:"PromiseLike<T>"}]},description:"A local audio track which can be created by `createMicrophoneAudioTrack()`."},volume:{required:!1,tsType:{name:"number"},description:"The volume. The value ranges from 0 (mute) to 1000 (maximum). A value of 100 is the current volume."},disabled:{required:!1,tsType:{name:"boolean"},description:`Enable or disable the track.

If a track is disabled, the SDK stops playing and publishing the track.`},muted:{required:!1,tsType:{name:"boolean"},description:"Sends or stops sending the media data of the track.\n\n- Setting `muted` does not stop capturing audio and takes shorter time to take effect than `disabled`. For details, see [What are the differences between setEnabled and setMuted?](https://docs.agora.io/en/Interactive%20Broadcast/faq/differences_between_setenabled_and_setmuted).\n- Do not use `disabled` and `muted` together."},children:{required:!1,tsType:{name:"ReactNode"},description:""}}};export{m as L};
//# sourceMappingURL=LocalAudioTrack-06928d48.js.map
