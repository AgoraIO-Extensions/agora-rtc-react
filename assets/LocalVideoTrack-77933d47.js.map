{"version":3,"file":"LocalVideoTrack-77933d47.js","sources":["../../src/components/LocalVideoTrack.tsx"],"sourcesContent":["import type { ILocalVideoTrack } from \"agora-rtc-sdk-ng\";\nimport type { HTMLProps } from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { VideoTrackStyle, useMergedStyle } from \"../assets/styles\";\nimport { useAwaited } from \"../hooks/tools\";\nimport type { MaybePromiseOrNull } from \"../misc/utils\";\n\nimport { useAutoPlayVideoTrack } from \"./TrackBoundary\";\n\nexport interface LocalVideoTrackProps extends HTMLProps<HTMLDivElement> {\n  /**\n   * The local video track to be played. Call [`IAgoraRTC.createScreenVideoTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/functions/useLocalCameraTrack.html\">`useLocalCameraTrack`</a> or the Web SDK's <a href=\"https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iagorartc.html#createscreenvideotrack) method to create a local video track.\n   */\n  readonly track?: MaybePromiseOrNull<ILocalVideoTrack>;\n\n  /**\n   * `true`: Play the track.`false`: Stop playing the track.\n   */\n  readonly play?: boolean;\n\n  /**\n   * `true`: Disable the track. When disabled, the SDK will stop playing and publishing the track.`false`: Enable the track.\n   */\n  readonly disabled?: boolean;\n\n  /**\n   * `true`: Pause sending media data of the track.`false`: Resume sending media data of the track.\n   */\n  readonly muted?: boolean;\n}\n\n/**\n * This component plays the local video track using the playback device selected by the user in the browser.\n * @example\n * ```jsx\n * import { LocalVideoTrack, useLocalCameraTrack } from \"agora-rtc-react\";\n *\n * function App() {\n *   const videoTrack = useLocalCameraTrack();\n *   return <LocalVideoTrack track={videoTrack} play />;\n * }\n * ```\n */\nexport function LocalVideoTrack({\n  track: maybeTrack,\n  play,\n  disabled,\n  muted,\n  style,\n  ...props\n}: LocalVideoTrackProps) {\n  const mergedStyle = useMergedStyle(VideoTrackStyle, style);\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  const track = useAwaited(maybeTrack);\n\n  useAutoPlayVideoTrack(track, play, div);\n\n  useEffect(() => {\n    if (track && disabled != null) {\n      track.setEnabled(!disabled).catch(console.warn);\n    }\n  }, [disabled, track]);\n\n  useEffect(() => {\n    if (track && muted != null) {\n      track.setMuted(muted).catch(console.warn);\n    }\n  }, [muted, track]);\n\n  return <div {...props} ref={setDiv} style={mergedStyle} />;\n}\n"],"names":["LocalVideoTrack","maybeTrack","play","disabled","muted","style","props","mergedStyle","useMergedStyle","VideoTrackStyle","div","setDiv","useState","track","useAwaited","useAutoPlayVideoTrack","useEffect"],"mappings":"wLA4CA,SAAAA,EAAA,CACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,MAAAC,EACA,MAAAC,EACA,GAAAC,CACA,EAAA,CACA,MAAAC,EAAAC,EAAAC,EAAAJ,CAAA,EACA,CAAAK,EAAAC,CAAA,EAAAC,WAAA,IAAA,EAEAC,EAAAC,EAAAb,CAAA,EAEA,OAAAc,EAAAF,EAAAX,EAAAQ,CAAA,EAEAM,EAAAA,UAAA,IAAA,CACAH,GAAAV,GAAA,MACAU,EAAA,WAAA,CAAAV,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAU,CAAA,CAAA,EAEAG,EAAAA,UAAA,IAAA,CACAH,GAAAT,GAAA,MACAS,EAAA,SAAAT,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAS,CAAA,CAAA,QAEA,MAAA,CAAA,GAAAP,EAAA,IAAAK,EAAA,MAAAJ,CAAA,CAAA,CACA;;;;;;;;;"}