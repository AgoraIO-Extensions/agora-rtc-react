{"version":3,"file":"LocalMicrophoneAndCameraUser.stories-4ce1bd7a.js","sources":["../../src/components/LocalMicrophoneAndCameraUser.tsx","../../src/components/LocalMicrophoneAndCameraUser.stories.tsx"],"sourcesContent":["import type { ICameraVideoTrack, IMicrophoneAudioTrack } from \"agora-rtc-sdk-ng\";\nimport type { HTMLProps, ReactNode } from \"react\";\n\nimport type { MaybePromiseOrNull } from \"../utils\";\n\nimport { CameraVideoTrack } from \"./CameraVideoTrack\";\nimport { MicrophoneAudioTrack } from \"./MicrophoneAudioTrack\";\nimport { UserCover } from \"./UserCover\";\nimport { FloatBoxStyle, VideoTrackWrapperStyle, useMergedStyle } from \"./styles\";\n\nexport interface LocalMicrophoneAndCameraUserProps extends HTMLProps<HTMLDivElement> {\n  /**\n   * Whether to turn on the local user's microphone. Default false.\n   */\n  readonly micOn?: boolean;\n  /**\n   * Whether to turn on the local user's camera. Default false.\n   */\n  readonly cameraOn?: boolean;\n  /**\n   * A microphone audio track which can be created by `createMicrophoneAudioTrack()`.\n   */\n  readonly audioTrack?: MaybePromiseOrNull<IMicrophoneAudioTrack>;\n  /**\n   * A camera video track which can be created by `createCameraVideoTrack()`.\n   */\n  readonly videoTrack?: MaybePromiseOrNull<ICameraVideoTrack>;\n  /**\n   * Whether to play the local user's audio track. Default follows `micOn`.\n   */\n  readonly playAudio?: boolean;\n  /**\n   * Whether to play the local user's video track. Default follows `cameraOn`.\n   */\n  readonly playVideo?: boolean;\n  /**\n   * Device ID, which can be retrieved by calling `getDevices()`.\n   */\n  readonly micDeviceId?: string;\n  /**\n   * Device ID, which can be retrieved by calling `getDevices()`.\n   */\n  readonly cameraDeviceId?: string;\n  /**\n   * The volume. The value ranges from 0 (mute) to 1000 (maximum). A value of 100 is the current volume.\n   */\n  readonly volume?: number;\n  /**\n   * Render cover image if playVideo is off.\n   */\n  readonly cover?: string;\n  /**\n   * Children is rendered on top of the video canvas.\n   */\n  readonly children?: ReactNode;\n}\n\n/**\n * Play/Stop local user camera and microphone track.\n */\nexport function LocalMicrophoneAndCameraUser({\n  micOn,\n  cameraOn,\n  audioTrack,\n  videoTrack,\n  playAudio,\n  playVideo,\n  micDeviceId,\n  cameraDeviceId,\n  volume,\n  cover,\n  children,\n  style,\n  ...props\n}: LocalMicrophoneAndCameraUserProps) {\n  const mergedStyle = useMergedStyle(VideoTrackWrapperStyle, style);\n  playVideo = playVideo ?? !!cameraOn;\n  playAudio = playAudio ?? !!micOn;\n  return (\n    <div {...props} style={mergedStyle}>\n      <CameraVideoTrack\n        deviceId={cameraDeviceId}\n        disabled={!cameraOn}\n        play={playVideo}\n        track={videoTrack}\n      />\n      <MicrophoneAudioTrack\n        deviceId={micDeviceId}\n        disabled={!micOn}\n        play={playAudio}\n        track={audioTrack}\n        volume={volume}\n      />\n      {cover && !cameraOn && <UserCover cover={cover} />}\n      <div style={FloatBoxStyle}>{children}</div>\n    </div>\n  );\n}\n","import { action } from \"@storybook/addon-actions\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport { FakeCameraVideoTrack, FakeMicrophoneAudioTrack, FakeRTCClient } from \"fake-agora-rtc\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { AgoraRTCProvider } from \"../hooks\";\nimport type { LocalMicrophoneAndCameraUserProps } from \"./LocalMicrophoneAndCameraUser\";\nimport { LocalMicrophoneAndCameraUser } from \"./LocalMicrophoneAndCameraUser\";\nconst meta: Meta<LocalMicrophoneAndCameraUserProps> = {\n  title: \"User/LocalMicrophoneAndCameraUser\",\n  component: LocalMicrophoneAndCameraUser,\n  tags: [\"autodocs\"],\n  parameters: {\n    backgrounds: {\n      default: \"light\"\n    }\n  }\n};\nexport default meta;\nexport interface OverviewProps {\n  micOn: boolean;\n  cameraOn: boolean;\n}\ntype OverviewArgs = OverviewProps & Omit<LocalMicrophoneAndCameraUserProps, keyof OverviewProps>;\nexport const Overview: StoryObj<OverviewArgs> = {\n  args: {\n    micOn: false,\n    cameraOn: false,\n    playVideo: false,\n    playAudio: false,\n    cover: \"https://www.agora.io/en/wp-content/uploads/2022/10/3d-spatial-audio-icon.svg\",\n    style: {\n      width: 288,\n      height: 216\n    }\n  },\n  render: function RenderLocalUser({\n    micOn,\n    cameraOn,\n    ...args\n  }: OverviewArgs) {\n    const [client] = useState(() => FakeRTCClient.create({\n      publish: async () => {\n        action(\"IAgoraRTCClient.publish()\")();\n      }\n    }));\n    const audioTrack = useMemo(() => {\n      return micOn ? FakeMicrophoneAudioTrack.create() : null;\n    }, [micOn]);\n    const videoTrack = useMemo(() => {\n      return cameraOn ? FakeCameraVideoTrack.create() : null;\n    }, [cameraOn]);\n    useEffect(() => {\n      if (client && audioTrack) {\n        client.publish(audioTrack);\n      }\n    }, [client, audioTrack]);\n    useEffect(() => {\n      if (client && videoTrack) {\n        client.publish(videoTrack);\n      }\n    }, [client, videoTrack]);\n    return <AgoraRTCProvider client={client}>\n        <LocalMicrophoneAndCameraUser audioTrack={audioTrack} cameraOn={cameraOn} micOn={micOn} videoTrack={videoTrack} {...args} />\n      </AgoraRTCProvider>;\n  }\n};\nOverview.parameters = {\n  ...Overview.parameters,\n  docs: {\n    ...Overview.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    micOn: false,\\n    cameraOn: false,\\n    playVideo: false,\\n    playAudio: false,\\n    cover: \\\"https://www.agora.io/en/wp-content/uploads/2022/10/3d-spatial-audio-icon.svg\\\",\\n    style: {\\n      width: 288,\\n      height: 216\\n    }\\n  },\\n  render: function RenderLocalUser({\\n    micOn,\\n    cameraOn,\\n    ...args\\n  }: OverviewArgs) {\\n    const [client] = useState(() => FakeRTCClient.create({\\n      publish: async () => {\\n        action(\\\"IAgoraRTCClient.publish()\\\")();\\n      }\\n    }));\\n    const audioTrack = useMemo(() => {\\n      return micOn ? FakeMicrophoneAudioTrack.create() : null;\\n    }, [micOn]);\\n    const videoTrack = useMemo(() => {\\n      return cameraOn ? FakeCameraVideoTrack.create() : null;\\n    }, [cameraOn]);\\n    useEffect(() => {\\n      if (client && audioTrack) {\\n        client.publish(audioTrack);\\n      }\\n    }, [client, audioTrack]);\\n    useEffect(() => {\\n      if (client && videoTrack) {\\n        client.publish(videoTrack);\\n      }\\n    }, [client, videoTrack]);\\n    return <AgoraRTCProvider client={client}>\\n        <LocalMicrophoneAndCameraUser audioTrack={audioTrack} cameraOn={cameraOn} micOn={micOn} videoTrack={videoTrack} {...args} />\\n      </AgoraRTCProvider>;\\n  }\\n}\",\n      ...Overview.parameters?.docs?.source\n    }\n  }\n};"],"names":["LocalMicrophoneAndCameraUser","micOn","cameraOn","audioTrack","videoTrack","playAudio","playVideo","micDeviceId","cameraDeviceId","volume","cover","children","style","props","mergedStyle","useMergedStyle","VideoTrackWrapperStyle","jsxs","jsx","CameraVideoTrack","MicrophoneAudioTrack","UserCover","FloatBoxStyle","meta","Overview","args","client","useState","FakeRTCClient","action","useMemo","FakeMicrophoneAudioTrack","FakeCameraVideoTrack","useEffect","AgoraRTCProvider","_a","_c","_b"],"mappings":"wrBA4DA,SAAAA,EAAA,CACA,MAAAC,EACA,SAAAC,EACA,WAAAC,EACA,WAAAC,EACA,UAAAC,EACA,UAAAC,EACA,YAAAC,EACA,eAAAC,EACA,OAAAC,EACA,MAAAC,EACA,SAAAC,EACA,MAAAC,EACA,GAAAC,CACA,EAAA,CACA,MAAAC,EAAAC,EAAAC,EAAAJ,CAAA,EACA,OAAAN,EAAAA,GAAA,CAAA,CAAAJ,EACAG,EAAAA,GAAA,CAAA,CAAAJ,EAEAgB,EAAA,MAAA,CAAA,GAAAJ,EAAA,MAAAC,EACA,SAAA,CAAAI,EAAAC,EAAA,CACA,SAAAX,EACA,SAAA,CAAAN,EACA,KAAAI,EACA,MAAAF,CAAA,CACA,EACAc,EAAAE,EAAA,CACA,SAAAb,EACA,SAAA,CAAAN,EACA,KAAAI,EACA,MAAAF,EACA,OAAAM,CAAA,CACA,EACAC,GAAA,CAAAR,GAAAgB,EAAAG,GAAA,MAAAX,CAAA,CAAA,EACAQ,EAAA,MAAA,CAAA,MAAAI,EAAA,SAAAX,CAAA,CAAA,CACA,CAAA,CAAA,CAEA,ylEC1FA,MAAMY,EAAgD,CACpD,MAAO,oCACP,UAAWvB,EACX,KAAM,CAAC,UAAU,EACjB,WAAY,CACV,YAAa,CACX,QAAS,OACX,CACF,CACF,EAOawB,EAAmC,CAC9C,KAAM,CACJ,MAAO,GACP,SAAU,GACV,UAAW,GACX,UAAW,GACX,MAAO,+EACP,MAAO,CACL,MAAO,IACP,OAAQ,GACV,CACF,EACA,OAAQ,SAAyB,CAC/B,MAAAvB,EACA,SAAAC,EACA,GAAGuB,CAAA,EACY,CACf,KAAM,CAACC,CAAM,EAAIC,EAAS,SAAA,IAAMC,EAAc,OAAO,CACnD,QAAS,SAAY,CACnBC,EAAO,2BAA2B,GACpC,CACD,CAAA,CAAC,EACI1B,EAAa2B,EAAAA,QAAQ,IAClB7B,EAAQ8B,EAAyB,OAAA,EAAW,KAClD,CAAC9B,CAAK,CAAC,EACJG,EAAa0B,EAAAA,QAAQ,IAClB5B,EAAW8B,EAAqB,OAAA,EAAW,KACjD,CAAC9B,CAAQ,CAAC,EACb+B,OAAAA,EAAAA,UAAU,IAAM,CACVP,GAAUvB,GACZuB,EAAO,QAAQvB,CAAU,CAC3B,EACC,CAACuB,EAAQvB,CAAU,CAAC,EACvB8B,EAAAA,UAAU,IAAM,CACVP,GAAUtB,GACZsB,EAAO,QAAQtB,CAAU,CAC3B,EACC,CAACsB,EAAQtB,CAAU,CAAC,EAChBc,EAACgB,EAAiB,CAAA,OAAAR,EACrB,SAACR,EAAAlB,EAAA,CAA6B,WAAAG,EAAwB,SAAAD,EAAoB,MAAAD,EAAc,WAAAG,EAAyB,GAAGqB,CAAA,CAAM,CAC5H,CAAA,CACJ,CACF,YACAD,EAAS,WAAa,CACpB,GAAGA,EAAS,WACZ,KAAM,CACJ,IAAGW,EAAAX,EAAS,aAAT,YAAAW,EAAqB,KACxB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAb,EAAS,aAAT,YAAAa,EAAqB,OAArB,YAAAD,EAA2B,MAChC,CACF,CACF"}