{"version":3,"file":"RemoteUser.stories-eaa1ff47.js","sources":["../../src/hooks/useVolumeLevel.ts","../../../agora-rtc-react-ui/src/components/icons/SVGMicrophone.tsx","../../../agora-rtc-react-ui/src/components/icons/SVGMicrophoneMute.tsx","../../../agora-rtc-react-ui/src/components/icons/SVGCamera.tsx","../../../agora-rtc-react-ui/src/components/icons/SVGCameraMute.tsx","../../../agora-rtc-react-ui/src/components/MicControl.tsx","../../../agora-rtc-react-ui/src/components/CameraControl.tsx"],"sourcesContent":["import type { ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\nimport { useEffect, useState } from \"react\";\n\nimport { interval } from \"../misc/utils\";\n\n/**\n * Returns the volume level of an audio track at a frequency of once per second.\n *\n * @param `audioTrack` {IRemoteAudioTrack | ILocalAudioTrack | undefined} The local or remote audio track. The local audio track can be created by calling [`useLocalMicrophoneTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/functions/useLocalMicrophoneTrack.html). If undefined, the volume level is 0.\n * @return number The volume level. The value range is [0,1]. 1 is the highest volume level. Usually a user with a volume level above 0.6 is a speaking user.\n * @example\n * ```jsx\n * import { useVolumeLevel, useLocalMicrophoneTrack } from \"agora-rtc-react\";\n *\n * function App() {\n *   const audioTrack = useLocalMicrophoneTrack();\n *   const volumeLevel = useVolumeLevel(audioTrack);\n *\n *   return <div>{volumeLevel}</div>;\n * }\n * ```\n */\nexport function useVolumeLevel(audioTrack?: IRemoteAudioTrack | ILocalAudioTrack): number {\n  const [volumeLevel, setVolumeLevel] = useState(0);\n\n  useEffect(() => {\n    if (audioTrack) {\n      return interval(() => {\n        setVolumeLevel(audioTrack.getVolumeLevel());\n      }, 1000);\n    }\n  }, [audioTrack]);\n\n  return volumeLevel;\n}\n","import type { SVGProps } from \"react\";\nimport { useEffect, useState } from \"react\";\n\nconst vHeight = 14;\nconst vWidth = 8;\nconst vBaseX = 8;\nconst vBaseY = 4;\n\nexport interface SVGMicrophoneProps extends SVGProps<SVGSVGElement> {\n  /** 0~1 */\n  volumeLevel?: number;\n  /** 0~1 */\n  noise?: number;\n}\n\nexport function SVGMicrophone({\n  volumeLevel: baseVolumeLevel = 0,\n  noise = 0.075,\n  ...props\n}: SVGMicrophoneProps) {\n  // 0~1\n  const [volumeLevel, setVolumeLevel] = useState(0);\n\n  useEffect(() => {\n    if (baseVolumeLevel && noise) {\n      const safeNoise = Math.max(0, Math.min(1, noise));\n      const ticket = setInterval(() => {\n        setVolumeLevel(\n          baseVolumeLevel + Math.random() * safeNoise * (Math.random() > 0.5 ? 1 : -1),\n        );\n      }, 50);\n      return () => clearInterval(ticket);\n    }\n  }, [baseVolumeLevel, noise]);\n\n  return (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <defs>\n        <clipPath id=\"icon-mic-v-clip\">\n          <rect height={vHeight} rx={vWidth / 2} width={vWidth} x={vBaseX} y={vBaseY} />\n        </clipPath>\n      </defs>\n      <path d=\"M0 0h24v24H0z\" fill=\"#999CA3\" opacity=\".01\" />\n      <rect\n        clipPath=\"url(#icon-mic-v-clip)\"\n        fill=\"#fff\"\n        height={vHeight}\n        width={vWidth}\n        x={vBaseX}\n        y={vBaseY}\n      />\n      <path\n        d=\"M4 16.625h2v-1.25H4v1.25Zm6 4h4v-1.25h-4v1.25Zm8-4h2v-1.25h-2v1.25Zm-4 4A4.625 4.625 0 0 0 18.625 16h-1.25A3.375 3.375 0 0 1 14 19.375v1.25ZM5.375 16A4.625 4.625 0 0 0 10 20.625v-1.25A3.375 3.375 0 0 1 6.625 16h-1.25Z\"\n        fill=\"#fff\"\n      />\n      <g clipPath=\"url(#icon-mic-v-clip)\">\n        <rect\n          fill=\"#44AD00\"\n          height={vHeight * 2}\n          style={{\n            transform: `translateY(${(1 - volumeLevel) * vHeight}px)`,\n            transition: \"transform .1s\",\n          }}\n          width={vWidth}\n          x={vBaseX}\n          y={vBaseY}\n        />\n      </g>\n    </svg>\n  );\n}\n","import type { SVGProps } from \"react\";\nimport { memo } from \"react\";\n\nexport type SVGMicrophoneMuteProps = SVGProps<SVGSVGElement>;\n\nexport const SVGMicrophoneMute = /* @__PURE__ */ memo<SVGMicrophoneMuteProps>(\n  function SVGMicrophoneMute(props) {\n    return (\n      <svg\n        fill=\"none\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        width=\"24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"m5 5 14 14\"\n          stroke=\"rgb(225, 225, 225, 0.35)\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1.25\"\n        />\n        <path\n          clipRule=\"evenodd\"\n          d=\"M19.277 16.625H20v-1.25h-1.973l1.25 1.25Zm-3.239 2.065.89.89a4.602 4.602 0 0 1-2.716 1.04l-.212.005h-4a4.626 4.626 0 0 1-4.55-3.787l-.033-.213H4v-1.25h2c.345 0 .625.28.625.625a3.375 3.375 0 0 0 3.19 3.37l.185.005h4a3.36 3.36 0 0 0 2.038-.685Zm.587-4.717V8a4.625 4.625 0 0 0-8.5-2.526l.911.91a3.374 3.374 0 0 1 6.281.991H14v1.25h1.375v.75H14v1.25h1.375v.75h-1.348l1.25 1.25h.098v.098l1.25 1.25Zm-2.587 2.717.89.89A4.625 4.625 0 0 1 7.375 14v-3.973l1.25 1.25v.098h.098l1.25 1.25H8.625V14a3.375 3.375 0 0 0 5.413 2.69Z\"\n          fill=\"rgb(225, 225, 225, 0.35)\"\n          fillRule=\"evenodd\"\n        />\n      </svg>\n    );\n  },\n);\n","import type { SVGProps } from \"react\";\nimport { memo } from \"react\";\n\nexport type SVGCameraProps = SVGProps<SVGSVGElement>;\n\nexport const SVGCamera = /* @__PURE__ */ memo<SVGCameraProps>(function SVGCamera(props) {\n  return (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <circle cx=\"12\" cy=\"11\" r=\"7\" stroke=\"#fff\" strokeLinejoin=\"round\" strokeWidth=\"1.25\" />\n      <circle cx=\"12\" cy=\"11\" r=\"3\" stroke=\"#fff\" strokeLinejoin=\"round\" strokeWidth=\"1.25\" />\n      <circle cx=\"14.625\" cy=\"6.625\" fill=\"#fff\" r=\".625\" />\n      <path\n        d=\"M7 18.25a8.004 8.004 0 0 0 10 0\"\n        stroke=\"#fff\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.25\"\n      />\n    </svg>\n  );\n});\n","import type { SVGProps } from \"react\";\nimport { memo } from \"react\";\n\nexport type SVGCameraMuteProps = SVGProps<SVGSVGElement>;\n\nexport const SVGCameraMute = /* @__PURE__ */ memo<SVGCameraMuteProps>(function SVGCameraMute(\n  props,\n) {\n  return (\n    <svg\n      fill=\"none\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"m5 5 14 14\"\n        stroke=\"rgb(225, 225, 225, 0.35)\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"1.25\"\n      />\n      <path\n        clipRule=\"evenodd\"\n        d=\"m15.72 18.373.91.909a8.63 8.63 0 0 1-9.788-.364l-.232-.18.78-.976a7.38 7.38 0 0 0 8.33.61Zm2.434-2.87A7.625 7.625 0 0 0 7.497 4.846l.897.896a6.375 6.375 0 0 1 8.864 8.864l.896.897Zm-3.857 1.446.952.951A7.625 7.625 0 0 1 5.1 7.751l.951.952a6.375 6.375 0 0 0 8.246 8.246Zm.956-4.348a3.625 3.625 0 0 0-4.854-4.854l.964.964a2.378 2.378 0 0 1 2.926 2.926l.964.964Zm-.628-5.351a.625.625 0 1 0 0-1.25.625.625 0 0 0 0 1.25Z\"\n        fill=\"rgb(225, 225, 225, 0.35)\"\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n});\n","import \"../assets/UserControl.css\";\n\nimport { useVolumeLevel } from \"agora-rtc-react\";\nimport type { ILocalAudioTrack, IRemoteAudioTrack } from \"agora-rtc-sdk-ng\";\nimport type { ButtonHTMLAttributes, MouseEvent } from \"react\";\nimport { useCallback } from \"react\";\n\nimport { SVGMicrophone } from \"./icons/SVGMicrophone\";\nimport { SVGMicrophoneMute } from \"./icons/SVGMicrophoneMute\";\n\nexport interface MicControlProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Audio track to subscribe volume level.\n   */\n  audioTrack?: ILocalAudioTrack | IRemoteAudioTrack;\n  /**\n   * Microphone is on.\n   */\n  micOn?: boolean;\n  /**\n   * Callback when microphone is on/off.\n   */\n  onMicChange?: (micOn: boolean) => void;\n  /**\n   * Add noise to volume level for a more organic effect.\n   */\n  noise?: number;\n}\n\n/**\n * A button with microphone icon.\n * Display realtime volume level when `audioTrack` is provided.\n */\nexport function MicControl({\n  noise,\n  audioTrack,\n  micOn,\n  onMicChange,\n  onClick,\n  className = \"\",\n  ...props\n}: MicControlProps) {\n  const volumeLevel = useVolumeLevel(audioTrack);\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\n      onMicChange?.(!micOn);\n      onClick?.(evt);\n    },\n    [onMicChange, onClick, micOn],\n  );\n\n  return (\n    <button {...props} className={`arr-user-control ${className}`} onClick={handleClick}>\n      {micOn ? <SVGMicrophone noise={noise} volumeLevel={volumeLevel} /> : <SVGMicrophoneMute />}\n    </button>\n  );\n}\n","import \"../assets/UserControl.css\";\n\nimport type { ButtonHTMLAttributes, MouseEvent } from \"react\";\nimport { useCallback } from \"react\";\n\nimport { SVGCamera } from \"./icons/SVGCamera\";\nimport { SVGCameraMute } from \"./icons/SVGCameraMute\";\n\nexport interface CameraControlProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Camera is on.\n   */\n  cameraOn?: boolean;\n  /**\n   * Callback when camera is on/off.\n   */\n  onCameraChange?: (cameraOn: boolean) => void;\n}\n\n/**\n * A button with camera icon.\n */\nexport function CameraControl({\n  cameraOn,\n  onCameraChange,\n  onClick,\n  className = \"\",\n  ...props\n}: CameraControlProps) {\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLButtonElement, globalThis.MouseEvent>) => {\n      onCameraChange?.(!cameraOn);\n      onClick?.(evt);\n    },\n    [onCameraChange, onClick, cameraOn],\n  );\n\n  return (\n    <button {...props} className={`arr-user-control ${className}`} onClick={handleClick}>\n      {cameraOn ? <SVGCamera /> : <SVGCameraMute />}\n    </button>\n  );\n}\n"],"names":["useVolumeLevel","audioTrack","volumeLevel","setVolumeLevel","useState","useEffect","interval","vHeight","vWidth","vBaseX","vBaseY","SVGMicrophone","baseVolumeLevel","noise","props","safeNoise","ticket","jsxs","jsx","SVGMicrophoneMute","memo","SVGCamera","SVGCameraMute","MicControl","micOn","onMicChange","onClick","className","handleClick","useCallback","evt","CameraControl","cameraOn","onCameraChange"],"mappings":"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"}