{"version":3,"file":"useLocalScreenTrack.en-US-ce2eb980.js","sources":["../../docs/hooks/useLocalScreenTrack.en-US.mdx?raw","../../src/stories/hooks/useLocalScreenTrack.en-US.mdx"],"sourcesContent":["export default \"## useLocalScreenTrack\\n\\nThis hook lets you create a local video track for screen-sharing.\\n\\n- This hook can only create the video track once before the component is destroyed.\\n- After the component is unmounted, the video track created by this hook stops publishing.\\n\\n#### Parameters\\n\\n| Parameter                    | Type                                                                                                               | Required | Description                                                                                                                                                                                                                                                                                    |\\n| ---------------------------- | ------------------------------------------------------------------------------------------------------------------ | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `ready`                      | `boolean`                                                                                                          | No       | Whether it is ready to create the track. The default value is `true`.                                                                                                                                                                                                                          |\\n| `screenVideoTrackInitConfig` | [`screenVideoTrackInitConfig`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x//screenVideoTrackInitConfig.html) | Yes      | Screen-sharing video configuration, including encoding and capturing configurations.                                                                                                                                                                                                           |\\n| `withAudio`                  | `string`                                                                                                           | Yes      | Whether to share the audio of the screen-sharing input source during screen sharing. Supported values are `\\\"enable\\\"`, `\\\"disable\\\"`, and `\\\"auto\\\"`. See the parameters of [`createScreenVideoTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x//createScreenVideoTrack.html) for details. |\\n| `client`                     | [`IAgoraRTCClient`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iagorartcclient.html)                 | No       | Created using the Web SDK's [`IAgoraRTC.createClient`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iagorartc.html#createclient) method.                                                                                                                                           |\\n\\n#### Returns\\n\\nReturns an object containing the following properties:\\n\\n| Property      | Type                                                                                           | Description                                                                                                                                                                                                                                                                                            |\\n| ------------- | ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\\n| `screenTrack` | `[ILocalVideoTrack, ILocalAudioTrack]` &VerticalLine; `ILocalVideoTrack` &VerticalLine; `null` | Depending on the passed `withAudio` value, it returns either the created screen-sharing video track or both the screen-sharing video track and audio track. See the returns of [`createScreenVideoTrack`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x//createScreenVideoTrack.html) for details. |\\n| `isLoading`   | `boolean`                                                                                      | <li>`true`: The hook is performing operations related to publishing the tracks.</li><li>`false`: The hook completes operations related to publishing the tracks, but it does not indicate a successful result.</li>                                                                                    |\\n| `error`       | `AgoraRTCReactError` &VerticalLine; `null`                                                     | Returns `null` if the track is successfully created, otherwise throws an error. See [`AgoraRTCReactError`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/classes/AgoraRTCReactError.html) for details.                                                                                             |\\n\\n#### Caveats\\n\\n- Agora recommends wrapping the returned video track object in [`AgoraRTCScreenShareProvider`](https://api-ref.agora.io/en/video-sdk/reactjs/2.x/functions/AgoraRTCScreenShareProvider.html).\\n- If you get the video track and audio track objects from the return value but only publish one track, you need to manually close the unpublished track using the Web SDK's [`ILocalTrack.close`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/ilocaltrack.html#close) method before stopping screen sharing. The other published track will be closed automatically.\\n- Subscribing to the local screen-sharing track will incur duplicate billing. Agora recommends that you add checks for local tracks when subscribing to video tracks.\\n\\n#### Sample code\\n\\n**Example 1: Wrap the screen-sharing video track in AgoraRTCScreenShareProvider**\\n\\n```jsx\\nimport { AgoraRTCScreenShareProvider, LocalVideoTrack, useLocalScreenTrack } from \\\"agora-rtc-react\\\";\\n\\nfunction App() {\\n  const { screenTrack, error } = useLocalScreenTrack(screenShareOn, {}, \\\"disable\\\");\\n\\n  return (\\n    <AgoraRTCScreenShareProvider client={client}>\\n      <LocalVideoTrack play style={{ width: \\\"300px\\\", height: \\\"300px\\\" }} track={screenTrack} />\\n    </AgoraRTCScreenShareProvider>\\n  );\\n}\\n```\\n\\n**Example 2: Avoid subscribing to the local screen-sharing track**\\n\\n```jsx\\nimport { useRemoteUsers, useRemoteVideoTracks, useRemoteAudioTracks } from \\\"agora-rtc-react\\\";\\n\\nfunction App() {\\n  const remoteUsers = useRemoteUsers();\\n  const { videoTracks } = useRemoteVideoTracks(\\n    // Remove the local user's screen-sharing video track from the subscription list\\n    remoteUsers.filter(user => user.uid !== appConfig.ShareScreenUID),\\n  );\\n  const { audioTracks } = useRemoteAudioTracks(\\n    // Remove the local user's screen-sharing audio track from the subscription list\\n    remoteUsers.filter(user => user.uid !== appConfig.ShareScreenUID),\\n  );\\n\\n  return <></>;\\n}\\n```\\n\"","import Readme from \"../../../docs/hooks/useLocalScreenTrack.en-US.mdx?raw\";\r\rimport { Meta, Markdown } from \"@storybook/blocks\";\r\r<Meta title=\"hooks/useLocalScreenTrack\" />\r\r<Markdown options={{ namedCodesToUnicode: { VerticalLine: \"|\" } }}>{Readme}</Markdown>\r"],"names":["Readme","_createMdxContent","props","_jsxs","_Fragment","_jsx","Meta","Markdown","MDXContent","MDXLayout","_provideComponents"],"mappings":"sXAAA,MAAeA,EAAA,48NCKf,SAASC,EAAkBC,EAAO,CAChC,OAAOC,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,2BACb,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAU,CACvB,QAAS,CACP,oBAAqB,CACnB,aAAc,GACf,CACF,EACD,SAAUP,CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASQ,EAAWN,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASO,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEC,EAAoB,EAAER,EAAM,UAAU,EACrF,OAAOO,EAAYJ,EAAAA,IAAKI,EAAW,OAAO,OAAO,CAAE,EAAEP,EAAO,CAC1D,SAAUG,EAAAA,IAAKJ,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAuB,CAC/B"}