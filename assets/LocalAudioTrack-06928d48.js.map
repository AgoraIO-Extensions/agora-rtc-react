{"version":3,"file":"LocalAudioTrack-06928d48.js","sources":["../../src/components/LocalAudioTrack.tsx"],"sourcesContent":["import type { ILocalAudioTrack } from \"agora-rtc-sdk-ng\";\nimport type { ReactNode } from \"react\";\nimport { useEffect } from \"react\";\n\nimport { useAwaited } from \"../hooks\";\nimport type { MaybePromiseOrNull } from \"../utils\";\n\nimport { useAutoPlayAudioTrack } from \"./TrackBoundary\";\n\nexport interface LocalAudioTrackProps {\n  /**\n   * A local audio track which can be created by `createMicrophoneAudioTrack()`.\n   */\n  readonly track?: MaybePromiseOrNull<ILocalAudioTrack>;\n  /**\n   * Whether to play the track.\n   */\n  readonly play?: boolean;\n  /**\n   * The volume. The value ranges from 0 (mute) to 1000 (maximum). A value of 100 is the current volume.\n   */\n  readonly volume?: number;\n  /**\n   * Enable or disable the track.\n   *\n   * If a track is disabled, the SDK stops playing and publishing the track.\n   */\n  readonly disabled?: boolean;\n  /**\n   * Sends or stops sending the media data of the track.\n   *\n   * - Setting `muted` does not stop capturing audio and takes shorter time to take effect than `disabled`. For details, see [What are the differences between setEnabled and setMuted?](https://docs.agora.io/en/Interactive%20Broadcast/faq/differences_between_setenabled_and_setmuted).\n   * - Do not use `disabled` and `muted` together.\n   */\n  readonly muted?: boolean;\n\n  readonly children?: ReactNode;\n}\n\n/**\n * A component which plays a local audio track.\n */\nexport function LocalAudioTrack({\n  track: maybeTrack,\n  play = false,\n  volume,\n  disabled,\n  muted,\n  children,\n}: LocalAudioTrackProps) {\n  const track = useAwaited(maybeTrack);\n\n  useAutoPlayAudioTrack(track, play);\n\n  useEffect(() => {\n    if (track && volume != null) {\n      track.setVolume(volume);\n    }\n  }, [track, volume]);\n\n  useEffect(() => {\n    if (track && disabled != null) {\n      track.setEnabled(!disabled).catch(console.warn);\n    }\n  }, [disabled, track]);\n\n  useEffect(() => {\n    if (track && muted != null) {\n      track.setMuted(muted).catch(console.warn);\n    }\n  }, [muted, track]);\n\n  return children ? <>{children}</> : null;\n}\n"],"names":["LocalAudioTrack","maybeTrack","play","volume","disabled","muted","children","track","useAwaited","useAutoPlayAudioTrack","useEffect","jsx","Fragment"],"mappings":"oJA0CA,SAAAA,EAAA,CACA,MAAAC,EACA,KAAAC,EAAA,GACA,OAAAC,EACA,SAAAC,EACA,MAAAC,EACA,SAAAC,CACA,EAAA,CACA,MAAAC,EAAAC,EAAAP,CAAA,EAEA,OAAAQ,EAAAF,EAAAL,CAAA,EAEAQ,EAAAA,UAAA,IAAA,CACAH,GAAAJ,GAAA,MACAI,EAAA,UAAAJ,CAAA,CACA,EACA,CAAAI,EAAAJ,CAAA,CAAA,EAEAO,EAAAA,UAAA,IAAA,CACAH,GAAAH,GAAA,MACAG,EAAA,WAAA,CAAAH,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAG,CAAA,CAAA,EAEAG,EAAAA,UAAA,IAAA,CACAH,GAAAF,GAAA,MACAE,EAAA,SAAAF,CAAA,EAAA,MAAA,QAAA,IAAA,CACA,EACA,CAAAA,EAAAE,CAAA,CAAA,EAEAD,EAAAK,EAAAC,EAAA,CAAA,SAAAN,CAAA,CAAA,EAAA,IACA;;"}