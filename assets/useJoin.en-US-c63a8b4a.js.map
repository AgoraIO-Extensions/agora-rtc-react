{"version":3,"file":"useJoin.en-US-c63a8b4a.js","sources":["../../docs/hooks/useJoin.en-US.mdx?raw","../../src/stories/hooks/useJoin.en-US.mdx"],"sourcesContent":["export default \"## useJoin\\n\\nThis hook lets a user automatically join a channel when the component is ready and automatically leaves the channel when the component is unmounted.\\n\\nYou can customize the conditions required to join a channel using `fetchArgs`. For example, generating a token and other asynchronous operations can be performed before joining the channel.\\n\\n#### Parameters\\n\\n| Parameter   | Type                                                                                                                                     | Required | Description                                                                                                                                                                         |\\n| ----------- | ---------------------------------------------------------------------------------------------------------------------------------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `fetchArgs` | `JoinOptions` &VerticalLine; `(() => Promise<JoinOptions>)`                                                                              | Required | The parameters or asynchronous function required to join the channel. See [`JoinOptions`](https://doc.shengwang.cn/api-ref/rtc/react/react-sdk/data-types#joinoptions) for details. |\\n| `ready`     | `boolean`                                                                                                                                | Optional | Whether the user is ready to join the channel. The default value is `true`.                                                                                                         |\\n| `client`    | [`IAgoraRTCClient`](https://docportal.shengwang.cn/cn/live-streaming-premium-4.x/API%20Reference/web_ng/interfaces/iagorartcclient.html) | No       | Created using the Web SDK's [`IAgoraRTC.createClient`](https://docportal.shengwang.cn/cn/video-call-4.x/API%20Reference/web_ng/interfaces/iagorartc.html#createclient) method.      |\\n\\n#### Returns\\n\\nReturns an object containing the following properties:\\n\\n| Property      | Type                                       | Description                                                                                                                                                                                                       |\\n| ------------- | ------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\\n| `data`        | `UID`                                      | The user ID if the user successfully joins the channel. If you does not specify a `uid` when passing `fetchArgs`, the default value `0` is returned.                                                              |\\n| `isLoading`   | `boolean` „ÄÅ                               | <li>`true`: The hook is performing operations related to joining the channel.</li><li>`false`: The hook completes operations related to joining the channel, but it does not indicate a successful result.</li>   |\\n| `isConnected` | `boolean`                                  | <li>`true`: The SDK is connected to the server, indicating that the user successfully joins the channel.</li><li>`false`: The SDK is not connected to the server.</li>                                            |\\n| `error`       | `AgoraRTCReactError` &VerticalLine; `null` | Returns `null` if the user successfully joins the channel, otherwise throws an error. See [`AgoraRTCReactError`](https://doc.shengwang.cn/api-ref/rtc/react/react-sdk/data-types#agorartcreacterror) for details. |\\n\\n#### Sample code\\n\\n```jsx\\nimport { useJoin } from \\\"agora-rtc-react\\\";\\n\\nfunction App() {\\n  // you can use useJoin like this by passing a function as first argument.\\n  // useJoin(async () => {\\n  //   you can do some actions like fetching token before calling join.\\n  //   const getData = await getToken();\\n  //   return getData;  The data type of getData must be fetchArgs\\n  // }, calling);\\n\\n  useJoin(\\n    {\\n      appid: YOUR_APPID,\\n      channel: YOUR_CHANNEL,\\n      token: YOUR_TOKEN,\\n    },\\n    ready,\\n  );\\n\\n  return <></>;\\n}\\n```\\n\"","import Readme from \"../../../docs/hooks/useJoin.en-US.mdx?raw\";\r\rimport { Meta, Markdown } from \"@storybook/blocks\";\r\r<Meta title=\"hooks/useJoin\" />\r\r<Markdown options={{ namedCodesToUnicode: { VerticalLine: \"|\" } }}>{Readme}</Markdown>\r"],"names":["Readme","_createMdxContent","props","_jsxs","_Fragment","_jsx","Meta","Markdown","MDXContent","MDXLayout","_provideComponents"],"mappings":"sXAAA,MAAeA,EAAA,+zICKf,SAASC,EAAkBC,EAAO,CAChC,OAAOC,EAAAA,KAAMC,EAAAA,SAAW,CACtB,SAAU,CAACC,EAAI,IAACC,EAAM,CACpB,MAAO,eACb,CAAK,EAAG;AAAA,EAAMD,EAAI,IAACE,EAAU,CACvB,QAAS,CACP,oBAAqB,CACnB,aAAc,GACf,CACF,EACD,SAAUP,CAChB,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASQ,EAAWN,EAAQ,GAAI,CAC9B,KAAM,CAAC,QAASO,CAAS,EAAI,OAAO,OAAO,CAAE,EAAEC,EAAoB,EAAER,EAAM,UAAU,EACrF,OAAOO,EAAYJ,EAAAA,IAAKI,EAAW,OAAO,OAAO,CAAE,EAAEP,EAAO,CAC1D,SAAUG,EAAAA,IAAKJ,EAAmBC,CAAK,CAC3C,CAAG,CAAC,EAAID,EAAuB,CAC/B"}