import{j as e}from"./jsx-runtime-ffb262ed.js";import{M as r,d as i}from"./index-1ca10796.js";import{u as a}from"./index-a1cf9e47.js";import"./index-76fb7be0.js";import"./_commonjsHelpers-de833af9.js";import"./iframe-f0ff49a8.js";import"../sb-preview/runtime.js";import"./index-d475d2ea.js";import"./index-ffc7e5ff.js";import"./index-d37d4223.js";import"./index-356e4a49.js";const s='## useTrackEvent\n\nThis hook lets you listen to specific events of the local or remote track.\n\n- When the component is mounted, this hook registers the corresponding event listener.\n- When the component is unmounted, this hook destroys the corresponding event listener.\n\n#### Parameters\n\n| Parameter  | Type       | Required | Description                                               |\n| ---------- | ---------- | -------- | --------------------------------------------------------- |\n| `track`    | `ITrack`   | Yes      | The local or remote track object.                         |\n| `event`    | `string`   | Yes      | The event name.                                           |\n| `listener` | `Function` | Yes      | The callback function to run when the event is triggered. |\n\nDifferent `track` objects support different `event` and `listener` combinations. The supported combinations are as follows:\n\n| `track`                                                               | `event` and `listener`                                                                                                         |\n| --------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\n| `ILocalTrack` &VerticalLine; `ILocalVideoTrack` &VerticalLine; `null` | See [`ILocalTrack.on`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/ilocaltrack.html#on).                          |\n| `IBufferSourceAudioTrack` &VerticalLine; `null`                       | See [`IBufferSourceAudioTrack.on`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/ibuffersourceaudiotrack.html#on).  |\n| `ILocalVideoTrack` &VerticalLine; `null`                              | See [`ILocalVideoTrack.on`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/ilocalvideotrack.html#on).                |\n| `IRemoteTrack` &VerticalLine; `null`                                  | See [`IRemoteTrack.on`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iremotetrack.html#event_first_frame_decoded). |\n\n#### Returns\n\nNone.\n\n#### Sample code\n\n```jsx\nimport { useRTCClient, useLocalCameraTrack, useTrackEvent } from "agora-rtc-react";\n\nfunction App() {\n  const videoTrack = useLocalCameraTrack();\n  useTrackEvent(client, "video-element-visible-status", () => {});\n\n  return <></>;\n}\n```\n';function o(n){return e.jsxs(e.Fragment,{children:[e.jsx(r,{title:"hooks/useTrackEvent"}),`
`,e.jsx(i,{options:{namedCodesToUnicode:{VerticalLine:"|"}},children:s})]})}function g(n={}){const{wrapper:t}=Object.assign({},a(),n.components);return t?e.jsx(t,Object.assign({},n,{children:e.jsx(o,n)})):o()}export{g as default};
//# sourceMappingURL=useTrackEvent.en-US-9cc20b25.js.map
