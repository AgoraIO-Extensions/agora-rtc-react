var N=Object.defineProperty;var A=(o,e,t)=>e in o?N(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var k=(o,e,t)=>(A(o,typeof e!="symbol"?e+"":e,t),t);import{j as h}from"./jsx-runtime-1a9d9a93.js";import{u as D,F as I,a as P}from"./styles-6070efb3.js";import{R as q}from"./RemoteAudioTrack-f7917900.js";import{R as M}from"./RemoteVideoTrack-3a7e1cc4.js";import{u as U,U as O}from"./useRTCClient-3ab73db6.js";import{r as d}from"./index-8b3efc3f.js";import{j as E,t as V,d as L}from"./TrackBoundary-32089e08.js";function b(o,e,t){return o.on(e,t),()=>o.off(e,t)}function _(o){const e=U(o),[t,r]=d.useState(e?e.connectionState==="CONNECTED":!1);return d.useEffect(()=>{if(e){r(e.connectionState==="CONNECTED");let s;return E([b(e,"connection-state-change",u=>{s==null||s(),s=V(()=>r(u==="CONNECTED"),0)}),()=>s==null?void 0:s()])}else r(!1)},[e]),t}class x extends Error{constructor(t,r){var e=(...args)=>{super(...args);k(this,"rtcMethod");k(this,"rtcError");k(this,"name","AgoraRTCReactException")};e(typeof r=="string"?r:r.message),this.rtcMethod=t,this.rtcError=r}log(t){console[t](this)}}function S(o,e,t){const r=U(t),s=e==="audio"?"audioTrack":"videoTrack",[u,f]=d.useState(o&&o[s]),g=_(),m=d.useRef(),[T,l]=d.useState(!1),[v,p]=d.useState(null);return d.useEffect(()=>{if(!o||!g)return;let a=!1;a||p(null);const w=e==="audio"?"hasAudio":"hasVideo",R=o.uid,j=async(n,c)=>{if(n[s]&&r.remoteUsers.some(({uid:i})=>n.uid===i))try{a||l(!0),await r.unsubscribe(n,c)}catch(i){a||p(new x("IAgoraRTCClient.unsubscribe",i)),console.error(i)}a||(f(void 0),l(!1))},C=async(n,c)=>{try{!n[s]&&r.remoteUsers.some(({uid:i})=>n.uid===i)&&(a||l(!0),await r.subscribe(n,c)),a||f(n[s])}catch(i){a||p(new x("IAgoraRTCClient.subscribe",i)),console.error(i)}a||l(!1)},y=m.current||(m.current=L());return!o[s]&&o[w]?y.run(()=>C(o,e)):f(o[s]),E([()=>{a=!0,y.dispose()},b(r,"user-published",(n,c)=>{n.uid===R&&c===e&&y.run(()=>C(n,e))}),b(r,"user-unpublished",(n,c)=>{n.uid===R&&c===e&&y.run(()=>j(n,e))})])},[g,r,o,e,s]),{track:u,isLoading:T,error:v}}function F({user:o,playVideo:e,playAudio:t,playbackDeviceId:r,volume:s,cover:u,style:f,children:g,videoPlayerConfig:m,...T}){const l=D(P,f),{track:v}=S(o,"video"),{track:p}=S(o,"audio");return e=e??(o==null?void 0:o.hasVideo),t=t??(o==null?void 0:o.hasAudio),h.jsxs("div",{...T,style:l,children:[h.jsx(M,{play:e,track:v,videoPlayerConfig:m}),h.jsx(q,{play:t,playbackDeviceId:r,track:p,volume:s}),u&&!e&&h.jsx(O,{cover:u}),h.jsx("div",{style:I,children:g})]})}F.__docgenInfo={description:`This component plays the video and audio tracks of a remote user and supports specifying the audio device to use. Specifying the video playback device is not supported.
@example
\`\`\`jsx
import { RemoteUser, useRemoteUsers } from "agora-rtc-react";

function App() {
  const remoteUsers = useRemoteUsers();

  return (
    <>
      {remoteUsers.map(user => (
        <RemoteUser key={user.uid} user={user} />
      ))}
    </>
  );
}
\`\`\``,methods:[],displayName:"RemoteUser",props:{user:{required:!1,tsType:{name:"IAgoraRTCRemoteUser"},description:"The remote user object."},playVideo:{required:!1,tsType:{name:"boolean"},description:"`true`: Play the video track of the remote user.`false`: Stop playing the video track of the remote user."},playAudio:{required:!1,tsType:{name:"boolean"},description:"`true`: Play the audio track of the remote user.`false`: Stop playing the audio track of the remote user."},playbackDeviceId:{required:!1,tsType:{name:"string"},description:"The ID of the playback device, such as a speaker. The device ID can be obtained using [`IAgoraRTC.getPlaybackDevices`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/iagorartc.html#getplaybackdevices). This property is only supported in the desktop version of the Chrome browser. Modifying the value of this property in other browsers throws a `NOT_SUPPORTED` error."},volume:{required:!1,tsType:{name:"number"},description:"The volume. The value ranges from 0 (mute) to 100 (the original volume)."},cover:{required:!1,tsType:{name:"union",raw:"string | (() => ReactNode)",elements:[{name:"string"},{name:"unknown"}]},description:"The cover image or custom component to be displayed when `playVideo` is `false`, replacing the video frame. You can pass the URL of an online image or the relative path of a local image."},children:{required:!1,tsType:{name:"ReactNode"},description:"The React nodes to be rendered."},videoPlayerConfig:{required:!1,tsType:{name:"VideoPlayerConfig"},description:"Playback configurations for a video track including setting the mirror and display mode. The SDK enables mirror mode for the local video track by default. See [`VideoPlayerConfig`](https://api-ref.agora.io/en/video-sdk/web/4.x/interfaces/videoplayerconfig.html) for details."}},composes:["HTMLProps"]};export{F as R};
