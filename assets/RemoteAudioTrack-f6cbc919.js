import{j as s,F as i}from"./jsx-runtime-670450c2.js";import{r}from"./index-f1f749bf.js";import{c as l}from"./TrackBoundary-a2d0821a.js";function u({track:e,play:n=!1,playbackDeviceId:a,volume:o,children:t}){return l(e,n),r.useEffect(()=>{e&&a!=null&&e.setPlaybackDevice(a).catch(console.warn)},[e,a]),r.useEffect(()=>{e&&o!=null&&e.setVolume(o)},[e,o]),t?s(i,{children:t}):null}u.__docgenInfo={description:"A component which plays a remote audio track.",methods:[],displayName:"RemoteAudioTrack",props:{play:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Whether to play the track."},track:{required:!1,tsType:{name:"union",raw:"T | null | undefined",elements:[{name:"IRemoteAudioTrack"},{name:"null"},{name:"undefined"}]},description:"A remote audio track."},playbackDeviceId:{required:!1,tsType:{name:"string"},description:"Device ID, which can be retrieved by calling `getPlaybackDevices`.\n\nChanges of the ID will invoke `setPlaybackDevice` which sets the audio playback device, for example, the speaker.\n\n> `setPlaybackDevice` supports Chrome on desktop devices only. Other browsers throw a `NOT_SUPPORTED` error when calling the method."},volume:{required:!1,tsType:{name:"number"},description:"The volume. The value ranges from 0 (mute) to 1000 (maximum). A value of 100 is the current volume."},children:{required:!1,tsType:{name:"ReactNode"},description:""}}};export{u as R};
//# sourceMappingURL=RemoteAudioTrack-f6cbc919.js.map
